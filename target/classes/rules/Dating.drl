package com.sample.rules

import com.sample.GUI;

declare Question
	question : String
	answer : String
end

function void query(Question question, String[] possibleAnswers) {		
	GUI gui = new GUI(question.getQuestion(), possibleAnswers);
	gui.waitForAnswer(); question.setAnswer(gui.getAnswer());
}

function void inform(Question question) {
	GUI gui = new GUI(question.getQuestion());
}

/// RULES ///

rule "Init"
	when
	then
		insert(new Question("What kind of preexisting relationship do you have with this person?", ""));
end

rule "What kind of preexisting relationship do you have with this person?"
	when
		q : Question(question == "What kind of preexisting relationship do you have with this person?"
			&& answer == "")
	then
		query(q, new String[]{"Professional", "Personal", "Other"});
		update(q);
end

rule "What kind of preexisting relationship do you have with this person? - Professional"
	when
		q : Question(question == "What kind of preexisting relationship do you have with this person?" && answer == "Professional")
	then
		insert(new Question("What type of professional relationship is it?", ""));
end

rule "What type of professional relationship is it?"
	when
		q : Question(question == "What type of professional relationship is it?"
			&& answer == "")
	then
		query(q, new String[]{"It's my landord", "It's my social worker", "It's my therapist", "It's my stalker", "It's my costar", "It's my physician", "It's my boss/coworker", "It's my professor", "It's my student"});
		update(q);
end

rule "What type of professional relationship is it? - It's my landord"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my landord")
	then
		insert(new Question("Do you live in either New York or San Francisco?", ""));
end

rule "Do you live in either New York or San Francisco?"
	when
		q : Question(question == "Do you live in either New York or San Francisco?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you live in either New York or San Francisco? - Yes"
	when
		q : Question(question == "Do you live in either New York or San Francisco?" && answer == "Yes")
	then
		insert(new Question("Do whatever it takes", ""));
end

rule "Do whatever it takes"
	when
		q : Question(question == "Do whatever it takes" && answer == "")
	then
		inform(q);
end

rule "Do you live in either New York or San Francisco? - No"
	when
		q : Question(question == "Do you live in either New York or San Francisco?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "Probably better not"
	when
		q : Question(question == "Probably better not" && answer == "")
	then
		inform(q);
end

rule "What type of professional relationship is it? - It's my social worker"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my social worker")
	then
		insert(new Question("Is this just an attempt to got your kids back?", ""));
end

rule "Is this just an attempt to got your kids back?"
	when
		q : Question(question == "Is this just an attempt to got your kids back?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Is this just an attempt to got your kids back? - Yes"
	when
		q : Question(question == "Is this just an attempt to got your kids back?" && answer == "Yes")
	then
		insert(new Question("Do whatever it takes", ""));
end

rule "Is this just an attempt to got your kids back? - No"
	when
		q : Question(question == "Is this just an attempt to got your kids back?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of professional relationship is it? - It's my therapist"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my therapist")
	then
		insert(new Question("Are you crazy", ""));
end

rule "Are you crazy"
	when
		q : Question(question == "Are you crazy"
			&& answer == "")
	then
		query(q, new String[]{"Maybe a little", "I don't think so"});
		update(q);
end

rule "Are you crazy - Maybe a little"
	when
		q : Question(question == "Are you crazy" && answer == "Maybe a little")
	then
		insert(new Question("Probably better not", ""));
end

rule "Are you crazy - I don't think so"
	when
		q : Question(question == "Are you crazy" && answer == "I don't think so")
	then
		insert(new Question("<reka_kolo>", ""));
end

rule "<reka_kolo>"
	when
		q : Question(question == "<reka_kolo>" && answer == "")
	then
		inform(q);
end

rule "What type of professional relationship is it? - It's my stalker"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my stalker")
	then
		insert(new Question("Is there a restraining order involved?", ""));
end

rule "Is there a restraining order involved?"
	when
		q : Question(question == "Is there a restraining order involved?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Is there a restraining order involved? - No"
	when
		q : Question(question == "Is there a restraining order involved?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "Is there a restraining order involved? - Yes"
	when
		q : Question(question == "Is there a restraining order involved?" && answer == "Yes")
	then
		insert(new Question("When are you gonna realize that I'am the only one who's ever gonna love you?!", ""));
end

rule "When are you gonna realize that I'am the only one who's ever gonna love you?!"
	when
		q : Question(question == "When are you gonna realize that I'am the only one who's ever gonna love you?!"
			&& answer == "")
	then
		query(q, new String[]{"Today!", "Never"});
		update(q);
end

rule "When are you gonna realize that I'am the only one who's ever gonna love you?! - Today!"
	when
		q : Question(question == "When are you gonna realize that I'am the only one who's ever gonna love you?!" && answer == "Today!")
	then
		insert(new Question("<reka_kolo>", ""));
end

rule "When are you gonna realize that I'am the only one who's ever gonna love you?! - Never"
	when
		q : Question(question == "When are you gonna realize that I'am the only one who's ever gonna love you?!" && answer == "Never")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of professional relationship is it? - It's my costar"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my costar")
	then
		insert(new Question("Are you just trying to generate publicity and dispel certain rumors?", ""));
end

rule "Are you just trying to generate publicity and dispel certain rumors?"
	when
		q : Question(question == "Are you just trying to generate publicity and dispel certain rumors?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Are you just trying to generate publicity and dispel certain rumors? - No"
	when
		q : Question(question == "Are you just trying to generate publicity and dispel certain rumors?" && answer == "No")
	then
		insert(new Question("Not advised, but we'll allow it if you make a sex tape", ""));
end

rule "Not advised, but we'll allow it if you make a sex tape"
	when
		q : Question(question == "Not advised, but we'll allow it if you make a sex tape" && answer == "")
	then
		inform(q);
end

rule "Are you just trying to generate publicity and dispel certain rumors? - Yes"
	when
		q : Question(question == "Are you just trying to generate publicity and dispel certain rumors?" && answer == "Yes")
	then
		insert(new Question("Hi, robert pattinson", ""));
end

rule "Hi, robert pattinson"
	when
		q : Question(question == "Hi, robert pattinson" && answer == "")
	then
		inform(q);
end

rule "What type of professional relationship is it? - It's my physician"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my physician")
	then
		insert(new Question("Is your health at any serious risk?", ""));
end

rule "Is your health at any serious risk?"
	when
		q : Question(question == "Is your health at any serious risk?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Is your health at any serious risk? - No"
	when
		q : Question(question == "Is your health at any serious risk?" && answer == "No")
	then
		insert(new Question("<reka_kolo>", ""));
end

rule "Is your health at any serious risk? - Yes"
	when
		q : Question(question == "Is your health at any serious risk?" && answer == "Yes")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of professional relationship is it? - It's my boss/coworker"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my boss/coworker")
	then
		insert(new Question("Does your job suck?", ""));
end

rule "Does your job suck?"
	when
		q : Question(question == "Does your job suck?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Does your job suck? - No"
	when
		q : Question(question == "Does your job suck?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "Does your job suck? - Yes"
	when
		q : Question(question == "Does your job suck?" && answer == "Yes")
	then
		insert(new Question("<kosc>", ""));
end

rule "<kosc>"
	when
		q : Question(question == "<kosc>" && answer == "")
	then
		inform(q);
end

rule "What type of professional relationship is it? - It's my professor"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my professor")
	then
		insert(new Question("<kosc>", ""));
end

rule "What type of professional relationship is it? - It's my student"
	when
		q : Question(question == "What type of professional relationship is it?" && answer == "It's my student")
	then
		insert(new Question("Where do you teach?", ""));
end

rule "Where do you teach?"
	when
		q : Question(question == "Where do you teach?"
			&& answer == "")
	then
		query(q, new String[]{"College", "Anything below college"});
		update(q);
end

rule "Where do you teach? - College"
	when
		q : Question(question == "Where do you teach?" && answer == "College")
	then
		insert(new Question("Does your job suck?", ""));
end

rule "Where do you teach? - Anything below college"
	when
		q : Question(question == "Where do you teach?" && answer == "Anything below college")
	then
		insert(new Question("Whoa. you're talking about having sex with a minor, right?", ""));
end

rule "Whoa. you're talking about having sex with a minor, right?"
	when
		q : Question(question == "Whoa. you're talking about having sex with a minor, right?"
			&& answer == "")
	then
		query(q, new String[]{"Yeah", "No, of course not"});
		update(q);
end

rule "Whoa. you're talking about having sex with a minor, right? - Yeah"
	when
		q : Question(question == "Whoa. you're talking about having sex with a minor, right?" && answer == "Yeah")
	then
		insert(new Question("Thought-crime! our agents have sent to your location. resistance is useless", ""));
end

rule "Thought-crime! our agents have sent to your location. resistance is useless"
	when
		q : Question(question == "Thought-crime! our agents have sent to your location. resistance is useless" && answer == "")
	then
		inform(q);
end

rule "Whoa. you're talking about having sex with a minor, right? - No, of course not"
	when
		q : Question(question == "Whoa. you're talking about having sex with a minor, right?" && answer == "No, of course not")
	then
		insert(new Question("Thought-crime! our agents have sent to your location. resistance is useless", ""));
end

rule "What kind of preexisting relationship do you have with this person? - Personal"
	when
		q : Question(question == "What kind of preexisting relationship do you have with this person?" && answer == "Personal")
	then
		insert(new Question("Are you related?", ""));
end

rule "Are you related?"
	when
		q : Question(question == "Are you related?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Are you related? - No"
	when
		q : Question(question == "Are you related?" && answer == "No")
	then
		insert(new Question("What type of personal relationship is it?", ""));
end

rule "What type of personal relationship is it?"
	when
		q : Question(question == "What type of personal relationship is it?"
			&& answer == "")
	then
		query(q, new String[]{"It's my highschool crush", "It's my dungeon master", "It's my cellmate", "It's my soulmate", "It's my roommate", "It's my dealer", "It's my best friend's sibling", "It's my missed connection"});
		update(q);
end

rule "What type of personal relationship is it? - It's my highschool crush"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my highschool crush")
	then
		insert(new Question("You've missed the point of this chart. and you disgust me.", ""));
end

rule "You've missed the point of this chart. and you disgust me."
	when
		q : Question(question == "You've missed the point of this chart. and you disgust me." && answer == "")
	then
		inform(q);
end

rule "What type of personal relationship is it? - It's my dungeon master"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my dungeon master")
	then
		insert(new Question("Yes, for the love of god, someone please have sex with the dungeon master!", ""));
end

rule "Yes, for the love of god, someone please have sex with the dungeon master!"
	when
		q : Question(question == "Yes, for the love of god, someone please have sex with the dungeon master!" && answer == "")
	then
		inform(q);
end

rule "What type of personal relationship is it? - It's my cellmate"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my cellmate")
	then
		insert(new Question("Do you really have a choice in the matter?", ""));
end

rule "Do you really have a choice in the matter?"
	when
		q : Question(question == "Do you really have a choice in the matter?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you really have a choice in the matter? - Yes"
	when
		q : Question(question == "Do you really have a choice in the matter?" && answer == "Yes")
	then
		insert(new Question("Probably better not", ""));
end

rule "Do you really have a choice in the matter? - No"
	when
		q : Question(question == "Do you really have a choice in the matter?" && answer == "No")
	then
		insert(new Question("Well, it's pretty obvious, but go ahead and give it a shot", ""));
end

rule "Well, it's pretty obvious, but go ahead and give it a shot"
	when
		q : Question(question == "Well, it's pretty obvious, but go ahead and give it a shot" && answer == "")
	then
		inform(q);
end

rule "What type of personal relationship is it? - It's my soulmate"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my soulmate")
	then
		insert(new Question("Are you done having sex with other people?", ""));
end

rule "Are you done having sex with other people?"
	when
		q : Question(question == "Are you done having sex with other people?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Are you done having sex with other people? - Yes"
	when
		q : Question(question == "Are you done having sex with other people?" && answer == "Yes")
	then
		insert(new Question("Well, it's pretty obvious, but go ahead and give it a shot", ""));
end

rule "Are you done having sex with other people? - No"
	when
		q : Question(question == "Are you done having sex with other people?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of personal relationship is it? - It's my roommate"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my roommate")
	then
		insert(new Question("Do you like drama?", ""));
end

rule "Do you like drama?"
	when
		q : Question(question == "Do you like drama?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you like drama? - Yes"
	when
		q : Question(question == "Do you like drama?" && answer == "Yes")
	then
		insert(new Question("Awesome! leaving the house and putting on clothes are two of the worst parts of dating, so this is actually one of the better decisions you'll ever make! go for it!", ""));
end

rule "Awesome! leaving the house and putting on clothes are two of the worst parts of dating, so this is actually one of the better decisions you'll ever make! go for it!"
	when
		q : Question(question == "Awesome! leaving the house and putting on clothes are two of the worst parts of dating, so this is actually one of the better decisions you'll ever make! go for it!" && answer == "")
	then
		inform(q);
end

rule "Do you like drama? - No"
	when
		q : Question(question == "Do you like drama?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of personal relationship is it? - It's my dealer"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my dealer")
	then
		insert(new Question("Do you wanna get high?", ""));
end

rule "Do you wanna get high?"
	when
		q : Question(question == "Do you wanna get high?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you wanna get high? - Yes"
	when
		q : Question(question == "Do you wanna get high?" && answer == "Yes")
	then
		insert(new Question("<sruba>", ""));
end

rule "<sruba>"
	when
		q : Question(question == "<sruba>" && answer == "")
	then
		inform(q);
end

rule "Do you wanna get high? - No"
	when
		q : Question(question == "Do you wanna get high?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of personal relationship is it? - It's my best friend's sibling"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my best friend's sibling")
	then
		insert(new Question("Are you crazy?", ""));
end

rule "Are you crazy?"
	when
		q : Question(question == "Are you crazy?"
			&& answer == "")
	then
		query(q, new String[]{"I don't think so", "A little"});
		update(q);
end

rule "Are you crazy? - I don't think so"
	when
		q : Question(question == "Are you crazy?" && answer == "I don't think so")
	then
		insert(new Question("You're a bad liar", ""));
end

rule "You're a bad liar"
	when
		q : Question(question == "You're a bad liar" && answer == "")
	then
		inform(q);
end

rule "Are you crazy? - A little"
	when
		q : Question(question == "Are you crazy?" && answer == "A little")
	then
		insert(new Question("<sruba>", ""));
end

rule "What type of personal relationship is it? - It's my missed connection"
	when
		q : Question(question == "What type of personal relationship is it?" && answer == "It's my missed connection")
	then
		insert(new Question("How lonely are you?", ""));
end

rule "How lonely are you?"
	when
		q : Question(question == "How lonely are you?"
			&& answer == "")
	then
		query(q, new String[]{"A little", "Not at all"});
		update(q);
end

rule "How lonely are you? - A little"
	when
		q : Question(question == "How lonely are you?" && answer == "A little")
	then
		insert(new Question("<sruba>", ""));
end

rule "How lonely are you? - Not at all"
	when
		q : Question(question == "How lonely are you?" && answer == "Not at all")
	then
		insert(new Question("You're a bad liar", ""));
end

rule "Are you related? - Yes"
	when
		q : Question(question == "Are you related?" && answer == "Yes")
	then
		insert(new Question("Are you related by blood?", ""));
end

rule "Are you related by blood?"
	when
		q : Question(question == "Are you related by blood?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Are you related by blood? - No"
	when
		q : Question(question == "Are you related by blood?" && answer == "No")
	then
		insert(new Question("Who is it?", ""));
end

rule "Who is it?"
	when
		q : Question(question == "Who is it?"
			&& answer == "")
	then
		query(q, new String[]{"It's my brother's wife's cousin, if you can believe it", "It's my step or adopted sibling or child"});
		update(q);
end

rule "Who is it? - It's my brother's wife's cousin, if you can believe it"
	when
		q : Question(question == "Who is it?" && answer == "It's my brother's wife's cousin, if you can believe it")
	then
		insert(new Question("Make it happen, captain", ""));
end

rule "Make it happen, captain"
	when
		q : Question(question == "Make it happen, captain" && answer == "")
	then
		inform(q);
end

rule "Who is it? - It's my step or adopted sibling or child"
	when
		q : Question(question == "Who is it?" && answer == "It's my step or adopted sibling or child")
	then
		insert(new Question("Are the parents still married?", ""));
end

rule "Are the parents still married?"
	when
		q : Question(question == "Are the parents still married?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Are the parents still married? - Yes"
	when
		q : Question(question == "Are the parents still married?" && answer == "Yes")
	then
		insert(new Question("Are you Woody Allen?", ""));
end

rule "Are you Woody Allen?"
	when
		q : Question(question == "Are you Woody Allen?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Are you Woody Allen? - Yes"
	when
		q : Question(question == "Are you Woody Allen?" && answer == "Yes")
	then
		insert(new Question("Make it happen, captain", ""));
end

rule "Are you Woody Allen? - No"
	when
		q : Question(question == "Are you Woody Allen?" && answer == "No")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "Absolutely not!!!"
	when
		q : Question(question == "Absolutely not!!!" && answer == "")
	then
		inform(q);
end

rule "Are the parents still married? - No"
	when
		q : Question(question == "Are the parents still married?" && answer == "No")
	then
		insert(new Question("Did you grow up together, like from childhood?", ""));
end

rule "Did you grow up together, like from childhood?"
	when
		q : Question(question == "Did you grow up together, like from childhood?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Did you grow up together, like from childhood? - Yes"
	when
		q : Question(question == "Did you grow up together, like from childhood?" && answer == "Yes")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "Did you grow up together, like from childhood? - No"
	when
		q : Question(question == "Did you grow up together, like from childhood?" && answer == "No")
	then
		insert(new Question("I guess it's ok, but you should probably keep it on the downlow", ""));
end

rule "I guess it's ok, but you should probably keep it on the downlow"
	when
		q : Question(question == "I guess it's ok, but you should probably keep it on the downlow" && answer == "")
	then
		inform(q);
end

rule "Are you related by blood? - Yes"
	when
		q : Question(question == "Are you related by blood?" && answer == "Yes")
	then
		insert(new Question("How close is this relationship?", ""));
end

rule "How close is this relationship?"
	when
		q : Question(question == "How close is this relationship?"
			&& answer == "")
	then
		query(q, new String[]{"It's my brother, sister, first cousin, aunt, uncle, parent, grandparent, or child", "It's my second cousin, half-cousin or more distant"});
		update(q);
end

rule "How close is this relationship? - It's my brother, sister, first cousin, aunt, uncle, parent, grandparent, or child"
	when
		q : Question(question == "How close is this relationship?" && answer == "It's my brother, sister, first cousin, aunt, uncle, parent, grandparent, or child")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "How close is this relationship? - It's my second cousin, half-cousin or more distant"
	when
		q : Question(question == "How close is this relationship?" && answer == "It's my second cousin, half-cousin or more distant")
	then
		insert(new Question("Are you really in love or just desperate?", ""));
end

rule "Are you really in love or just desperate?"
	when
		q : Question(question == "Are you really in love or just desperate?"
			&& answer == "")
	then
		query(q, new String[]{"God, i am so desperate", "No, it's really love, i'am sure"});
		update(q);
end

rule "Are you really in love or just desperate? - God, i am so desperate"
	when
		q : Question(question == "Are you really in love or just desperate?" && answer == "God, i am so desperate")
	then
		insert(new Question("Hang in there, pal. you'll meet someone else", ""));
end

rule "Hang in there, pal. you'll meet someone else"
	when
		q : Question(question == "Hang in there, pal. you'll meet someone else" && answer == "")
	then
		inform(q);
end

rule "Are you really in love or just desperate? - No, it's really love, i'am sure"
	when
		q : Question(question == "Are you really in love or just desperate?" && answer == "No, it's really love, i'am sure")
	then
		insert(new Question("Do, you live in a sparsely populated area? or the south?", ""));
end

rule "Do, you live in a sparsely populated area? or the south?"
	when
		q : Question(question == "Do, you live in a sparsely populated area? or the south?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Do, you live in a sparsely populated area? or the south? - No"
	when
		q : Question(question == "Do, you live in a sparsely populated area? or the south?" && answer == "No")
	then
		insert(new Question("Hang in there, pal. you'll meet someone else", ""));
end

rule "Do, you live in a sparsely populated area? or the south? - Yes"
	when
		q : Question(question == "Do, you live in a sparsely populated area? or the south?" && answer == "Yes")
	then
		insert(new Question("I guess it's ok, but you should probably keep it on the downlow", ""));
end

rule "What kind of preexisting relationship do you have with this person? - Other"
	when
		q : Question(question == "What kind of preexisting relationship do you have with this person?" && answer == "Other")
	then
		insert(new Question("What type of other relationship is it?", ""));
end

rule "What type of other relationship is it?"
	when
		q : Question(question == "What type of other relationship is it?"
			&& answer == "")
	then
		query(q, new String[]{"It's a ghost that's been haunting me", "It's my best friend's ex", "It's my xbox/wii/playstation", "It's my pet or other animal", "It's my lovebot"});
		update(q);
end

rule "What type of other relationship is it? - It's a ghost that's been haunting me"
	when
		q : Question(question == "What type of other relationship is it?" && answer == "It's a ghost that's been haunting me")
	then
		insert(new Question("Like in that Demi Moore/Patrick Swayze movie?", ""));
end

rule "Like in that Demi Moore/Patrick Swayze movie?"
	when
		q : Question(question == "Like in that Demi Moore/Patrick Swayze movie?"
			&& answer == "")
	then
		query(q, new String[]{"Yes, exactly like that!", "No, it's really nothing like that!"});
		update(q);
end

rule "Like in that Demi Moore/Patrick Swayze movie? - Yes, exactly like that!"
	when
		q : Question(question == "Like in that Demi Moore/Patrick Swayze movie?" && answer == "Yes, exactly like that!")
	then
		insert(new Question("Fuck that ghost", ""));
end

rule "Fuck that ghost"
	when
		q : Question(question == "Fuck that ghost" && answer == "")
	then
		inform(q);
end

rule "Like in that Demi Moore/Patrick Swayze movie? - No, it's really nothing like that!"
	when
		q : Question(question == "Like in that Demi Moore/Patrick Swayze movie?" && answer == "No, it's really nothing like that!")
	then
		insert(new Question("Would you have cated this person when among the living?", ""));
end

rule "Would you have cated this person when among the living?"
	when
		q : Question(question == "Would you have cated this person when among the living?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Would you have cated this person when among the living? - Yes"
	when
		q : Question(question == "Would you have cated this person when among the living?" && answer == "Yes")
	then
		insert(new Question("Fuck that ghost", ""));
end

rule "Would you have cated this person when among the living? - No"
	when
		q : Question(question == "Would you have cated this person when among the living?" && answer == "No")
	then
		insert(new Question("Probably better not", ""));
end

rule "What type of other relationship is it? - It's my best friend's ex"
	when
		q : Question(question == "What type of other relationship is it?" && answer == "It's my best friend's ex")
	then
		insert(new Question("How long since the stopped dating?", ""));
end

rule "How long since the stopped dating?"
	when
		q : Question(question == "How long since the stopped dating?"
			&& answer == "")
	then
		query(q, new String[]{"Oh, it's been awhile", "Well, technically, the haven't, really..."});
		update(q);
end

rule "How long since the stopped dating? - Oh, it's been awhile"
	when
		q : Question(question == "How long since the stopped dating?" && answer == "Oh, it's been awhile")
	then
		insert(new Question("Are they still friends?", ""));
end

rule "Are they still friends?"
	when
		q : Question(question == "Are they still friends?"
			&& answer == "")
	then
		query(q, new String[]{"They're friendly enough", "They have swuhm to kill each other on sight"});
		update(q);
end

rule "Are they still friends? - They're friendly enough"
	when
		q : Question(question == "Are they still friends?" && answer == "They're friendly enough")
	then
		insert(new Question("Clear it with your friend first. bros before hos, right? or vice versa, as the case may be", ""));
end

rule "Clear it with your friend first. bros before hos, right? or vice versa, as the case may be"
	when
		q : Question(question == "Clear it with your friend first. bros before hos, right? or vice versa, as the case may be" && answer == "")
	then
		inform(q);
end

rule "Are they still friends? - They have swuhm to kill each other on sight"
	when
		q : Question(question == "Are they still friends?" && answer == "They have swuhm to kill each other on sight")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "How long since the stopped dating? - Well, technically, the haven't, really..."
	when
		q : Question(question == "How long since the stopped dating?" && answer == "Well, technically, the haven't, really...")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "What type of other relationship is it? - It's my xbox/wii/playstation"
	when
		q : Question(question == "What type of other relationship is it?" && answer == "It's my xbox/wii/playstation")
	then
		insert(new Question("How old are you again?", ""));
end

rule "How old are you again?"
	when
		q : Question(question == "How old are you again?"
			&& answer == "")
	then
		query(q, new String[]{"I'm over 18", "I'm under 18"});
		update(q);
end

rule "How old are you again? - I'm over 18"
	when
		q : Question(question == "How old are you again?" && answer == "I'm over 18")
	then
		insert(new Question("Do you want to be alone for the rest of your life", ""));
end

rule "Do you want to be alone for the rest of your life"
	when
		q : Question(question == "Do you want to be alone for the rest of your life"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you want to be alone for the rest of your life - Yes"
	when
		q : Question(question == "Do you want to be alone for the rest of your life" && answer == "Yes")
	then
		insert(new Question("It's for the best right now. game on!", ""));
end

rule "It's for the best right now. game on!"
	when
		q : Question(question == "It's for the best right now. game on!" && answer == "")
	then
		inform(q);
end

rule "Do you want to be alone for the rest of your life - No"
	when
		q : Question(question == "Do you want to be alone for the rest of your life" && answer == "No")
	then
		insert(new Question("Put down the controller and go take a shower. your genitals will thank you.", ""));
end

rule "Put down the controller and go take a shower. your genitals will thank you."
	when
		q : Question(question == "Put down the controller and go take a shower. your genitals will thank you." && answer == "")
	then
		inform(q);
end

rule "How old are you again? - I'm under 18"
	when
		q : Question(question == "How old are you again?" && answer == "I'm under 18")
	then
		insert(new Question("It's for the best right now. game on!", ""));
end

rule "What type of other relationship is it? - It's my pet or other animal"
	when
		q : Question(question == "What type of other relationship is it?" && answer == "It's my pet or other animal")
	then
		insert(new Question("Seriously?", ""));
end

rule "Seriously?"
	when
		q : Question(question == "Seriously?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Seriously? - No"
	when
		q : Question(question == "Seriously?" && answer == "No")
	then
		insert(new Question("Ok, well, not 'date' per se but...", ""));
end

rule "Ok, well, not 'date' per se but..."
	when
		q : Question(question == "Ok, well, not 'date' per se but..."
			&& answer == "")
	then
		query(q, new String[]{"True"});
		update(q);
end

rule "Ok, well, not 'date' per se but... - True"
	when
		q : Question(question == "Ok, well, not 'date' per se but..." && answer == "True")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "Seriously? - Yes"
	when
		q : Question(question == "Seriously?" && answer == "Yes")
	then
		insert(new Question("Are you a farmer?", ""));
end

rule "Are you a farmer?"
	when
		q : Question(question == "Are you a farmer?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Are you a farmer? - No"
	when
		q : Question(question == "Are you a farmer?" && answer == "No")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "Are you a farmer? - Yes"
	when
		q : Question(question == "Are you a farmer?" && answer == "Yes")
	then
		insert(new Question("I guess it's ok, but you should probably keep it on the downlow", ""));
end

rule "What type of other relationship is it? - It's my lovebot"
	when
		q : Question(question == "What type of other relationship is it?" && answer == "It's my lovebot")
	then
		insert(new Question("Do you live in Japan?", ""));
end

rule "Do you live in Japan?"
	when
		q : Question(question == "Do you live in Japan?"
			&& answer == "")
	then
		query(q, new String[]{"Yes", "No"});
		update(q);
end

rule "Do you live in Japan? - Yes"
	when
		q : Question(question == "Do you live in Japan?" && answer == "Yes")
	then
		insert(new Question("I guess it's ok, but you should probably keep it on the downlow", ""));
end

rule "Do you live in Japan? - No"
	when
		q : Question(question == "Do you live in Japan?" && answer == "No")
	then
		insert(new Question("Will you please move there to make the rest of us feel better?", ""));
end

rule "Will you please move there to make the rest of us feel better?"
	when
		q : Question(question == "Will you please move there to make the rest of us feel better?"
			&& answer == "")
	then
		query(q, new String[]{"No", "Yes"});
		update(q);
end

rule "Will you please move there to make the rest of us feel better? - No"
	when
		q : Question(question == "Will you please move there to make the rest of us feel better?" && answer == "No")
	then
		insert(new Question("Absolutely not!!!", ""));
end

rule "Will you please move there to make the rest of us feel better? - Yes"
	when
		q : Question(question == "Will you please move there to make the rest of us feel better?" && answer == "Yes")
	then
		insert(new Question("I guess it's ok, but you should probably keep it on the downlow", ""));
end